@model USPTOQueryBuilder.Services.QueryResultsViewModel
@{
    ViewData["Title"] = "Patent Search Results";
    var queryDescription = ViewBag.QueryDescription ?? "Custom Query";
    var dateRange = ViewBag.DateRange ?? "Date range not specified";
    var queryCriteria = ViewBag.QueryCriteria as List<USPTOQueryBuilder.Models.SearchCriteria>;
}

<style>
    .results-header {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

    .stat-card {
        background: white;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        text-align: center;
        height: 100%;
    }

    .stat-number {
        font-size: 2rem;
        font-weight: bold;
        color: #333;
    }

    .results-table {
        font-size: 14px;
    }

    .results-table th {
        background-color: #f8f9fa;
        position: sticky;
        top: 0;
        z-index: 10;
        font-weight: 600;
    }

    .table-container {
        max-height: 600px;
        overflow-y: auto;
        border: 1px solid #dee2e6;
        border-radius: 8px;
    }
</style>

<div class="container-fluid mt-4">
    <div class="results-header">
        <h1>@queryDescription</h1>
        <p class="mb-0">@dateRange</p>
    </div>

    @if (Model.Success)
    {
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="stat-number">@Model.TotalRecords.ToString("N0")</div>
                    <div>Total Patents Found</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="stat-number">@Model.DisplayedRecords.ToString("N0")</div>
                    <div>Displaying</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="stat-number">@Model.Fields.Count</div>
                    <div>Data Fields</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-card">
                    <a asp-action="DownloadResults" asp-route-queryId="@ViewBag.QueryId" class="btn btn-primary">
                        Download CSV
                    </a>
                </div>
            </div>
        </div>

        @if (queryCriteria != null && queryCriteria.Any(c => !string.IsNullOrEmpty(c.Field)))
        {
            <div class="alert alert-info">
                <h6>Search Criteria:</h6>
                @foreach (var criteria in queryCriteria.Where(c => !string.IsNullOrEmpty(c.Field)))
                {
                    <p class="mb-0">@criteria.Field @criteria.Operator "@criteria.Value"</p>
                }
            </div>
        }

        @if (Model.DisplayedRecords < Model.TotalRecords)
        {
            <div class="alert alert-warning">
                Showing first @Model.DisplayedRecords of @Model.TotalRecords.ToString("N0") patents. 
                Download CSV for all results.
            </div>
        }

        @if (Model.Data != null && Model.Data.Any())
        {
            <div class="mb-3">
                <button onclick="exportCurrentView()" class="btn btn-secondary">Export Visible Data</button>
                <a asp-action="Builder" class="btn btn-secondary">New Search</a>
            </div>

            <div class="table-container">
                <table class="table table-striped table-hover results-table" id="resultsTable">
                    <thead>
                        <tr>
                            @foreach (var field in Model.Fields)
                            {
                                <th>@field.Replace("_", " ")</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var row in Model.Data)
                        {
                            <tr>
                                @foreach (var field in Model.Fields)
                                {
                                    <td>
                                        @{
                                            var value = row.ContainsKey(field) ? row[field]?.ToString() ?? "" : "";
                                            if (field == "patent_id" && !string.IsNullOrEmpty(value))
                                            {
                                                <a href="https://patents.google.com/patent/US@value" target="_blank">@value</a>
                                            }
                                            else if (value.Length > 200)
                                            {
                                                <span title="@value">@value.Substring(0, 200)...</span>
                                            }
                                            else
                                            {
                                                @value
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <h3>No Patents Found</h3>
                <p>Try adjusting your search criteria</p>
                <a asp-action="Builder" class="btn btn-primary">Back to Search</a>
            </div>
        }
    }
    else
    {
        <div class="alert alert-danger">
            <h4>Search Failed</h4>
            <p>@Model.Message</p>
            <a asp-action="Builder" class="btn btn-primary">Try Again</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        function exportCurrentView() {
            const table = document.getElementById('resultsTable');
            let csv = [];
            
            // Headers
            const headers = [];
            table.querySelectorAll('thead th').forEach(th => {
                headers.push('"' + th.textContent.trim() + '"');
            });
            csv.push(headers.join(','));
            
            // Data
            table.querySelectorAll('tbody tr').forEach(tr => {
                const row = [];
                tr.querySelectorAll('td').forEach(td => {
                    let value = td.textContent.trim().replace(/"/g, '""');
                    row.push('"' + value + '"');
                });
                csv.push(row.join(','));
            });
            
            // Download
            const blob = new Blob([csv.join('\n')], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'patent_results_' + new Date().getTime() + '.csv';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        }
    </script>
}